@page "/SubkategorijaForm/{Pav}/{LytisPassed}"
@using Trikotazo_Parduotuve.Entities
@using Trikotazo_Parduotuve.Repositories
@inject NavigationManager navigationManager
@inject SubkategorijaRepository subkategorijaRepository
@rendermode InteractiveServer
<h3>Subkategorija</h3>

@if(subkategorija is null)
{
    <p>Loading...</p>
}
else
{
    <EditForm Model="placeHolder" OnValidSubmit="UpdateDB" FormName="SubkategorijaForm">
        <DataAnnotationsValidator />
        <div class="form-group">
            <label>
                Pavadinimas: <b>@placeHolder.Pavadinimas</b>
            </label>
        </div>

        <div class="form-group">
            <label>Lytis:</label>
            <InputSelect @bind-Value="placeHolder.Lytis" class="form-control" style="width:100px">
                @foreach(Lytis lytis in Enum.GetValues(typeof(Lytis)))
                {
                    <option value="@lytis" >@lytis</option>
                }
            </InputSelect>
        </div>

        <div class="form-group">
            <label>
                Aprašymas:
            </label>
            <InputTextArea @bind-Value="placeHolder.Aprasymas" class="form-control" rows="4" style="width:500px" />
        </div>

        <div class="form-group">
            <label>
                Kategorija: <b>@placeHolder.Fk_KATEGORIJA</b>
            </label>
        </div>

        <button type="submit">Save</button>
    </EditForm>
}


@code {
    [Parameter]
    public string Pav { get; set; }
    [Parameter]
    public string LytisPassed { get; set; }
    public Lytis lytis;
    public Subkategorija subkategorija;
    public Subkategorija placeHolder;

    protected override async Task OnInitializedAsync()
    {
        Lytis.TryParse(LytisPassed, out lytis);
        subkategorija = await subkategorijaRepository.GetByKey(Pav, lytis);
        placeHolder = new Subkategorija(subkategorija);
    }

    public async Task UpdateDB()
    {
        await subkategorijaRepository.UpdateEntity(subkategorija.Pavadinimas, (int)subkategorija.Lytis, placeHolder);
        subkategorija = await subkategorijaRepository.GetByKey(placeHolder.Pavadinimas, placeHolder.Lytis);
        placeHolder = new Subkategorija(subkategorija);
        navigationManager.NavigateTo($"/SubkategorijaForm/{placeHolder.Pavadinimas}/{placeHolder.Lytis}", forceLoad: true);
    }
}