@page "/SubkategorijaForm/{Pav}/{LytisPassed}"
@using Trikotazo_Parduotuve.Entities
@using Trikotazo_Parduotuve.Repositories
@inject NavigationManager navigationManager
@inject SubkategorijaRepository subkategorijaRepository
@inject KategorijaRepository kategorijaRepository;
@inject TrikotazasRepository trikotazasRepository;
@inject TiekejasRepository tiekejasRepository;
@rendermode InteractiveServer
<h3>Subkategorija</h3>

@if(placeHolder != null)
{
    <EditForm Model="placeHolder" OnValidSubmit="UpdateDB" FormName="SubkategorijaForm">
        <DataAnnotationsValidator />
        <div class="form-group">
            @if (LytisPassed.Equals("nauja"))
            {
                <label>
                    Pavadinimas:
                </label>
                <InputText @bind-Value="placeHolder.Pavadinimas" class="form-control" rows="4" style="width:500px" />
                <ValidationMessage For="@(() => placeHolder.Pavadinimas)" />
            }
            else
            {
                <label>
                    Pavadinimas: <b>@placeHolder.Pavadinimas</b>
                </label>
            }
        </div>

        <div class="form-group">
            @if (LytisPassed.Equals("nauja"))
            {
                <label>Lytis:</label>
                <InputSelect @bind-Value="placeHolder.Lytis" class="form-control" style="width:200px">
                    @foreach (Lytis lytis in Enum.GetValues(typeof(Lytis)))
                    {
                        <option value="@lytis">@lytis</option>
                    }
                </InputSelect>
                <ValidationMessage For="@(() => placeHolder.Lytis)" />
            }
            else
            {
                <label>Lytis: <b>@placeHolder.Lytis</b></label>
            }
        </div>
        <div class="form-group">
            <label>
                Aprašymas:
            </label>
            <InputTextArea @bind-Value="placeHolder.Aprasymas" class="form-control" rows="4" style="width:500px" />
        </div>

        <div class="form-group">
            <label>
                Kategorija:
            </label>
            <InputSelect @bind-Value="placeHolder.Fk_KATEGORIJA" class="form-control" style="width:100px">
                @foreach (Kategorija kategorija in kategorijos)
                {
                    <option value="@kategorija.Pav">@kategorija.Pav</option>
                }
            </InputSelect>
            <ValidationMessage For="@(() => placeHolder.Fk_KATEGORIJA)" />
        </div>
        <br/>
        <button type="submit">Save</button>
    </EditForm>
}
<br />
@if(trikotazai != null && trikotazai.Count > 0)
{
    <table class="table table-bordered table-striped">
        <thead>
            <tr>
                <th scope="col">Pavadinimas</th>
                <th scope="col">Kaina</th>
                <th scope="col">Medžiaga</th>
                <th scope="col">Dydis</th>
                <th scope="col">Spalva</th>
                <th scope="col">Kiekis</th>
                <th scope="col">Paskutinis atnaujinimas</th>
                <th scope="col">Subkategorija</th>
                <th scope="col">Lytis</th>
                <th scope="col">Tiekejas</th>
            </tr>
        </thead>
        <tbody>
            @foreach(Trikotazas trikotazas in trikotazai)
            {
                <tr>
                    <td>@trikotazas.Pavadinimas</td>
                    <td>@trikotazas.Kaina</td>
                    <td>@trikotazas.Medziaga</td>
                    <td>@trikotazas.Dydis</td>
                    <td>@trikotazas.Spalva</td>
                    <td>@trikotazas.Kiekis</td>
                    <td>@trikotazas.Paskutinis_atnaujinimas.ToShortDateString()</td>
                    <td>@trikotazas.Fk_SUBKATEGORIJA_pav</td>
                    <td>@((Lytis)trikotazas.Fk_SUBKATEGORIJA_lytis)</td>
                    <td>@trikotazas.Fk_TIEKEJAS</td>
                    <td><button @onclick="()=>GoToTrikotazasForm(trikotazas)">Peržiūrėti</button></td>
                    <td><button @onclick="()=>DeleteTrikotazas(trikotazas)">Ištrinti</button></td>
                </tr>
            }
        </tbody>
    </table>
}

<br />
<button @onclick="() => trikotazasAdditionPopupIsOpen = true">Add trikotažas</button>

@if (trikotazasAdditionPopupIsOpen)
{
    <div class="modal" tabindex="-1" role="dialog" style="display:block">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add New Trikotazas</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" @onclick="()=> trikotazasAdditionPopupIsOpen = false"></button>
                </div>
                <EditForm Model="trikotazasPlaceHolder" OnValidSubmit="AddTrikotazas">
                    <DataAnnotationsValidator />
                    <div class="modal-body">
                        <table>
                            <tr>
                                <td>Pavadinimas<span style="color:red">*</span> </td>
                                <td><InputText placeholder="Trikotazo pavadinimas..." @bind-value="trikotazasPlaceHolder.Pavadinimas" class="form-control" /></td>
                                <ValidationMessage For="@(() => trikotazasPlaceHolder.Pavadinimas)" />
                            </tr>
                            <tr>
                                <td>Kaina<span style="color:red">*</span> </td>
                                <td><InputNumber placeholder="Trikotazo kaina..." @bind-value="trikotazasPlaceHolder.Kaina" class="form-control" /></td>
                                <ValidationMessage For="@(() => trikotazasPlaceHolder.Kaina)" />
                            </tr>
                            <tr>
                                <td>Medziaga<span style="color:red">*</span> </td>
                                <td><InputText placeholder="Trikotazo medžiaga..." @bind-value="trikotazasPlaceHolder.Medziaga" class="form-control" /></td>
                                <ValidationMessage For="@(() => trikotazasPlaceHolder.Medziaga)" />
                            </tr>
                            <tr>
                                <td>Dydis<span style="color:red">*</span> </td>
                                <td><InputText placeholder="Trikotazo dydis..." @bind-value="trikotazasPlaceHolder.Dydis" class="form-control" /></td>
                                <ValidationMessage For="@(() => trikotazasPlaceHolder.Dydis)" />
                            </tr>
                            <tr>
                                <td>Spalva<span style="color:red">*</span> </td>
                                <td><InputText placeholder="Trikotazo spalva..." @bind-value="trikotazasPlaceHolder.Spalva" class="form-control" /></td>
                                <ValidationMessage For="@(() => trikotazasPlaceHolder.Spalva)" />
                            </tr>
                            <tr>
                                <td>Kiekis<span style="color:red">*</span> </td>
                                <td><InputNumber placeholder="Trikotazo kiekis..." @bind-value="trikotazasPlaceHolder.Kiekis" class="form-control" /></td>
                                <ValidationMessage For="@(() => trikotazasPlaceHolder.Kiekis)" />
                            </tr>
                            <tr>
                                <td>Subkategorija<span style="color:red">*</span> </td>
                                <td class="form-control"><b>@subkategorija.Pavadinimas</b></td>
                            </tr>
                            <tr>
                                <td>Lytis<span style="color:red">*</span> </td>
                                <td class="form-control"><b>@((Lytis)subkategorija.Lytis)</b></td>
                            </tr>
                            <tr>
                                <td>Tiekejas<span style="color:red">*</span> </td>
                                <td>
                                    <InputSelect @bind-Value="trikotazasPlaceHolder.Fk_TIEKEJAS" class="form-control">
                                        @foreach (Tiekejas tiekejas in tiekejai)
                                        {
                                            <option value="@tiekejas.Id">@tiekejas.Pavadinimas</option>
                                        }
                                    </InputSelect>
                                    <ValidationMessage For="@(() => trikotazasPlaceHolder.Fk_TIEKEJAS)" />
                                </td>
                            </tr>
                        </table>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" @onclick="()=> trikotazasAdditionPopupIsOpen = false">Close</button>
                        <button type="submit" class="btn btn-primary">Add trikotazas</button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
}


@code {
    [Parameter]
    public string Pav { get; set; }
    [Parameter]
    public string LytisPassed { get; set; }
    public Lytis lytis;
    public Subkategorija subkategorija;
    public Subkategorija placeHolder;
    public List<Kategorija> kategorijos;
    public List<Trikotazas> trikotazai;
    public List<Tiekejas> tiekejai;
    public bool trikotazasAdditionPopupIsOpen = false;
    public Trikotazas trikotazasPlaceHolder = new Trikotazas();

    protected override async Task OnInitializedAsync()
    {
        kategorijos = await kategorijaRepository.GetAllAsync();
        if (LytisPassed.Equals("nauja"))
        {
            placeHolder = new Subkategorija();
        }
        else
        {
            Lytis.TryParse(LytisPassed, out lytis);
            subkategorija = await subkategorijaRepository.GetByKey(Pav, lytis);
            placeHolder = new Subkategorija(subkategorija);
            trikotazai = await trikotazasRepository.GetFilteredBySubkategorija(subkategorija.Pavadinimas, (int)subkategorija.Lytis);
        }
        tiekejai = await tiekejasRepository.GetAllAsync();
    }

    public async Task UpdateDB()
    {
        // TODO padaryti, kad INSERT'intu nauja subkategorijos elementa i DB
        await subkategorijaRepository.UpdateEntity(subkategorija.Pavadinimas, (int)subkategorija.Lytis, placeHolder);

        subkategorija = await subkategorijaRepository.GetByKey(placeHolder.Pavadinimas, placeHolder.Lytis);
        trikotazai = await trikotazasRepository.GetFilteredBySubkategorija(placeHolder.Pavadinimas, (int)placeHolder.Lytis);

        navigationManager.NavigateTo($"/SubkategorijaForm/{placeHolder.Pavadinimas}/{placeHolder.Lytis}", forceLoad: true);
    }

    public void GoToTrikotazasForm(Trikotazas trikotazas)
    {
        navigationManager.NavigateTo($"/TrikotazasForm/{trikotazas.Id}");
    }

    public async Task DeleteTrikotazas(Trikotazas trikotazas)
    {
        await trikotazasRepository.Remove(trikotazas.Id);
        navigationManager.NavigateTo(navigationManager.Uri, true);
    }

    public async Task AddTrikotazas()
    {
        trikotazasPlaceHolder.Fk_SUBKATEGORIJA_pav = subkategorija.Pavadinimas;
        trikotazasPlaceHolder.Fk_SUBKATEGORIJA_lytis = (int)subkategorija.Lytis;
        trikotazasPlaceHolder.Paskutinis_atnaujinimas = DateTime.Today;
        Trikotazas trikotazas = new Trikotazas(trikotazasPlaceHolder);

        await trikotazasRepository.Add(trikotazas);
        navigationManager.NavigateTo(navigationManager.Uri, true);
    }
}