@page "/KategorijaList/{Page:int}"
@using Trikotazo_Parduotuve.Entities
@using Trikotazo_Parduotuve.Repositories
@inject KategorijaRepository kategorijaRepository
@inject NavigationManager navigationManager;
@rendermode InteractiveServer

<h3>Kategorijos</h3>

@if(kategorijos is null)
{
    <h2>Loading...</h2>
}
else
{
    <table class="table table-bordered table-striped">
        <thead>
            <tr>
                <th scope="col">Pavadinimas</th>
                <th scope="col">Aprašymas</th>
            </tr>
        </thead>
        <tbody>
            @foreach(Kategorija kategorija in kategorijos)
            {
                <tr>
                    <td>@kategorija.Pav</td>
                    <td>@kategorija.Aprasas</td>
                    <td><button @onclick="()=>GoToKategorijaForm(kategorija)">Peržiūrėti</button></td>
                </tr>
            }
        </tbody>
    </table>
}

<div style="float:left;width:100%;text-align:center">
    <button @onclick="()=>GoToPage(Page-1)">Previous</button>
    <span>@Page</span>
    <button @onclick="()=>GoToPage(Page+1)">Next</button>
</div>
<br />
<br />

@code {
    [Parameter]
    public int Page { get; set; }
    public List<Kategorija> kategorijos;
    const int CHUNK_SIZE = 8;

    protected override async Task OnInitializedAsync()
    {
        // await LoadKategorijas();
        kategorijos = await kategorijaRepository.GetChunk(CHUNK_SIZE, Page * CHUNK_SIZE - CHUNK_SIZE);
        if (kategorijos.Count < 1)
        {
            navigationManager.NavigateTo($"/KategorijaList/{Page - 1}");
        }
    }

    private async Task LoadKategorijas()
    {
        kategorijos = await kategorijaRepository.GetAllAsync();
    }

    public void GoToPage(int page)
    {
        if (page > 0)
        {
            navigationManager.NavigateTo($"/KategorijaList/{page}");
        }
    }

    public void GoToKategorijaForm(Kategorija kategorija)
    {
        navigationManager.NavigateTo($"/KategorijaForm/{kategorija.Pav}");
    }
}
